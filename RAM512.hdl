// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM64(in=in, load=a, address=address[3..8], out=a1);
    RAM64(in=in, load=b, address=address[3..8], out=b1);
    RAM64(in=in, load=c, address=address[3..8], out=c1);
    RAM64(in=in, load=d, address=address[3..8], out=d1);
    RAM64(in=in, load=e, address=address[3..8], out=e1);
    RAM64(in=in, load=f, address=address[3..8], out=f1);
    RAM64(in=in, load=g, address=address[3..8], out=g1);
    RAM64(in=in, load=h, address=address[3..8], out=h1);
    Mux8Way16(a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1, sel=address[0..2], out=out);
    
}